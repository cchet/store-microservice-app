# Quakrus
quarkus.application.name=warehouse
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] %s%e%n
%dev.quarkus.http.ssl-port=8445
%dev.quarkus.http.insecure-requests=disabled
%dev.quarkus.http.ssl.certificate.key-store-file=keystore.p12
%dev.quarkus.http.ssl.certificate.key-store-file-type=PKCS12
%dev.quarkus.http.ssl.certificate.key-store-password=${KEY_STORE_PASSWORD}
%dev.quarkus.http.ssl.certificate.trust-store-file=truststore.p12
%dev.quarkus.http.ssl.certificate.trust-store-file-type=PKCS12
%dev.quarkus.http.ssl.certificate.trust-store-password=${TRUST_STORE_PASSWORD}
# Datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=warehouse
quarkus.datasource.password=${DB_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://warehouse-db:5432/warehouse
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql
%dev.quarkus.datasource.password=warehouse
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5434/warehouse
# OIDC
quarkus.oidc.auth-server-url=http://sso:8080/realms/store
quarkus.oidc.client-id=warehouse-service
quarkus.oidc.credentials.secret=${CLIENT_SECRET}
quarkus.http.cors=false
quarkus.oidc.application-type=service
%dev.quarkus.oidc.auth-server-url=https://localhost:9443/realms/store
%dev.quarkus.oidc.credentials.secret=client-secret-warehouse
%dev.quarkus.oidc.tls.verification=none
# Open API
quarkus.smallrye-openapi.security-scheme=oidc
quarkus.smallrye-openapi.security-scheme-name=Keycloak
quarkus.swagger-ui.oauth2-redirect-url=https://localhost:${quarkus.http.ssl-port}/q/swagger-ui
quarkus.smallrye-openapi.oidc-open-id-connect-url=${quarkus.oidc.auth-server-url}/.well-known/openid-configuration
# JWT
mp.jwt.verify.publickey.location=http://sso:8080/realms/store/protocol/openid-connect/certs
mp.jwt.verify.issuer=https://sso.store.mk8s.local/realms/store
%dev.mp.jwt.verify.publickey.location=https://localhost:9443/realms/store/protocol/openid-connect/certs
%dev.mp.jwt.verify.issuer=https://localhost:9433/realms/store
mp.jwt.verify.audiences=store-service,order-service
# Tracing
%dev.quarkus.opentelemetry.enabled=true
%dev.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
# Container 
# Overwrite with your username on hub.docker.com!
quarkus.container-image.group=cchet
quarkus.container-image.name=warehouse
quarkus.container-image.registry=docker.io
%container.quarkus.container-image.push=true
%container.quarkus.container-image.build=true
# Kubernetes settings
quarkus.kubernetes.deployment-target=kubernetes
%k8s.quarkus.kubernetes.deploy=true
quarkus.kubernetes.part-of=store-microservice-app
quarkus.kubernetes.env.mapping.db-password.from-secret=warehouse
quarkus.kubernetes.env.mapping.db-password.with-key=db_password
quarkus.kubernetes.env.mapping.client-secret.from-secret=warehouse
quarkus.kubernetes.env.mapping.client-secret.with-key=client_secret
quarkus.kubernetes.resources.limits.cpu=0.5
quarkus.kubernetes.resources.limits.memory=256Mi