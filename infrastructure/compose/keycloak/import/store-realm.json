{
    "id": "23ba7c7d-99bb-4798-a7e9-28ec743e3d76",
    "realm": "store",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [{
            "id": "6ea41a4b-075a-4fee-b83e-e39577409701",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "23ba7c7d-99bb-4798-a7e9-28ec743e3d76",
            "attributes": {}
        }, {
            "id": "9f40d8a4-1831-431e-b9e1-8e04f65ae958",
            "name": "default-roles-store",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
                "realm": ["offline_access", "uma_authorization"],
                "client": {
                    "account": ["manage-account", "view-profile"]
                }
            },
            "clientRole": false,
            "containerId": "23ba7c7d-99bb-4798-a7e9-28ec743e3d76",
            "attributes": {}
        }, {
            "id": "49d5e10d-fd94-4047-b318-e068f3cad4fa",
            "name": "customer-role",
            "description": "",
            "composite": true,
            "composites": {
                "realm": ["customer-role"]
            },
            "clientRole": false,
            "containerId": "23ba7c7d-99bb-4798-a7e9-28ec743e3d76",
            "attributes": {}
        }, {
            "id": "c7aeec3e-6048-4cde-9926-9569123060c4",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "23ba7c7d-99bb-4798-a7e9-28ec743e3d76",
            "attributes": {}
        }],
        "client": {
            "realm-management": [{
                "id": "a84979b4-81a8-439d-b99d-4d1488c2e242",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "23638bcf-a274-4f3b-8e6a-4139d59f6db7",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "4c20fe32-1162-4f97-a011-979071a6aa5c",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "7318ffd0-8ece-47fb-8d73-35e96b23e567",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "8d139f18-cf5f-44d1-adb0-d358dc97286c",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "f517fb72-dab8-4dfe-96cd-958c1b745e9b",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                    "client": {
                        "realm-management": ["query-clients"]
                    }
                },
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "f4fabbec-95e2-4d20-baae-9952cdabbc1c",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "4d282800-cb59-428c-beb7-3198418dbeaa",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "22a14ec3-2034-4c2c-b094-3ab88bec582b",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "7fa38668-f223-419d-b8fa-4f49d73cee03",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "fad2f9ec-fd0d-450d-868a-8e3d8f1ffb03",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "0b6eaf9d-b43d-43db-ac15-7dc7ab98a153",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "20b9bd63-49ce-4910-bff6-1ca073d64116",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "8d65f0b6-55fc-4fc3-bc56-1ac9059500f4",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "31655374-44a5-437b-8ee8-03833c991b44",
                "name": "realm-admin",
                "description": "${role_realm-admin}",
                "composite": true,
                "composites": {
                    "client": {
                        "realm-management": ["create-client", "manage-events", "view-authorization", "view-identity-providers", "impersonation", "view-clients", "query-users", "query-clients", "manage-clients", "query-groups", "manage-realm", "manage-authorization", "view-realm", "manage-identity-providers", "view-users", "manage-users", "view-events", "query-realms"]
                    }
                },
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "1d6b49cf-11ce-4600-ace8-67dabdc81dea",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                    "client": {
                        "realm-management": ["query-users", "query-groups"]
                    }
                },
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "2a2edfc9-a442-4a4a-b2a3-9e272ce3d9d7",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "2cca70d3-db73-469c-9590-a64ec5aa33a5",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }, {
                "id": "a0c09649-6ea0-4e2e-9f3d-fd4bfd04ba84",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
                "attributes": {}
            }],
            "warehouse-service": [],
            "security-admin-console": [],
            "store-service": [{
                "id": "ebe557e8-42bf-44b3-9c38-12ea0d9540cd",
                "name": "customer-role",
                "composite": true,
                "composites": {
                    "realm": ["customer-role"]
                },
                "clientRole": true,
                "containerId": "e2ec4c4d-2cf4-4112-bb87-2335ab45b189",
                "attributes": {}
            }],
            "admin-cli": [],
            "account-console": [],
            "order-service": [],
            "broker": [{
                "id": "edb84841-2277-4c9e-af9f-59c07f1dcc56",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "498fab99-566f-4772-a2d6-7ef10ce98b70",
                "attributes": {}
            }],
            "account": [{
                "id": "871abc1d-910c-4244-be77-0970c888eb56",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
                "attributes": {}
            }, {
                "id": "f9a8b5a5-4fb6-42ff-8693-e7c41c3dead4",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
                "attributes": {}
            }, {
                "id": "c220b669-5164-4f18-b526-f36c884a1468",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
                "attributes": {}
            }, {
                "id": "dbb37ef2-b312-4fce-bf80-457d375be2a9",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": true,
                "composites": {
                    "client": {
                        "account": ["manage-account-links"]
                    }
                },
                "clientRole": true,
                "containerId": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
                "attributes": {}
            }, {
                "id": "c64f3029-d995-4f22-a967-1eef40546513",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
                "attributes": {}
            }, {
                "id": "3ffb0f36-15b4-4b6c-a2da-bf4e38d01ff6",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": true,
                "composites": {
                    "client": {
                        "account": ["view-consent"]
                    }
                },
                "clientRole": true,
                "containerId": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
                "attributes": {}
            }, {
                "id": "47563ecb-beb7-4f80-a93b-a16cf7dec6c5",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
                "attributes": {}
            }]
        }
    },
    "groups": [{
        "id": "6289c75c-b481-4176-a695-6bb5e7bc7eed",
        "name": "customer-group",
        "path": "/customer-group",
        "attributes": {},
        "realmRoles": ["customer-role"],
        "clientRoles": {},
        "subGroups": []
    }],
    "defaultRole": {
        "id": "9f40d8a4-1831-431e-b9e1-8e04f65ae958",
        "name": "default-roles-store",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "23ba7c7d-99bb-4798-a7e9-28ec743e3d76"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "scopeMappings": [{
        "clientScope": "offline_access",
        "roles": ["offline_access"]
    }],
    "clientScopeMappings": {
        "account": [{
            "client": "account-console",
            "roles": ["manage-account"]
        }]
    },
    "clients": [{
        "id": "05f2a426-92b4-4b9c-8c57-7d38cd443580",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/store/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/store/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }, {
        "id": "bb3e821c-8289-4d1d-aee4-55c4214d518a",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/store/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/store/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [{
            "id": "ab907e15-21c4-4937-a4b7-edfd1b14ab10",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
        }],
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }, {
        "id": "00a9fded-6464-4a31-b789-042ca8ce268f",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }, {
        "id": "498fab99-566f-4772-a2d6-7ef10ce98b70",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }, {
        "id": "abce4682-9253-4c15-9948-094be857b1b6",
        "clientId": "order-service",
        "name": "",
        "description": "",
        "rootUrl": "http://localhost:8081/*",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "XOieZg3uSUzG90BuPJW3tTo7bTsHacCB",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1664550473",
            "backchannel.logout.session.required": "false",
            "display.on.consent.screen": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }, {
        "id": "84abad6a-1d5d-4907-b3dd-b6e41a2d97d9",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }, {
        "id": "90b909cd-c036-48dd-a470-669e762478b3",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/store/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/admin/store/console/*"],
        "webOrigins": ["+"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [{
            "id": "2770f5d8-29a4-47ae-8bb5-042035a15d2f",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
            }
        }],
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }, {
        "id": "e2ec4c4d-2cf4-4112-bb87-2335ab45b189",
        "clientId": "store-service",
        "name": "store-service",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "http://localhost:8080/ui/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "wPIsY66wyotufvfXCrhwxiaL4qDhjz1x",
        "redirectUris": ["http://localhost:8080/*"],
        "webOrigins": ["*"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": true,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1664111048",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "http://localhost:8080/ui/",
            "display.on.consent.screen": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "microprofile-jwt", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access"]
    }, {
        "id": "d1408da6-525a-4f5b-8dc4-f2d9fd6b07c2",
        "clientId": "warehouse-service",
        "name": "warehouse-service",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "alFy1bu2bggqJFXGONw2u2Cg7sj6M9du",
        "redirectUris": ["http://localhost:8082/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1664124545",
            "backchannel.logout.session.required": "false",
            "post.logout.redirect.uris": "+",
            "display.on.consent.screen": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }],
    "clientScopes": [{
        "id": "da3af314-cc86-4d6a-aba5-19c016990c03",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [{
            "id": "c14cde5a-38fe-4ea4-90ff-d4be7f24ff0f",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
            }
        }, {
            "id": "31827206-a4a9-42ff-915d-7f2bc52467ab",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
            }
        }]
    }, {
        "id": "ae602e88-1745-4c01-899d-a0778b491b8e",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
        },
        "protocolMappers": [{
            "id": "b0bffa53-1c00-4a73-ba27-873e522cfe8c",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
        }]
    }, {
        "id": "b945400a-5d4b-4f33-b021-bf51ffe4b508",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [{
            "id": "67c63943-3211-4001-83ec-560445da479a",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
            }
        }, {
            "id": "4407ded7-d249-43c1-986c-49555aa1d9bc",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
            }
        }, {
            "id": "8683a27e-3c50-4b5b-b7ac-d64ff21c6b77",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
            }
        }, {
            "id": "a0fa1ca3-c5b0-41c2-aee3-65d86a5b0978",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
            }
        }, {
            "id": "53e438e4-eba4-443e-9be5-4277f3021d4a",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
            }
        }, {
            "id": "da7efa2b-97f6-445e-a9ae-c1463ac5bcfd",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
            }
        }, {
            "id": "af4270af-c9da-4016-a0b2-450b9cc56f91",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
            }
        }, {
            "id": "dc432429-b0e4-4f4b-a896-eeba71adec0b",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
            }
        }, {
            "id": "f7e07852-68fb-4fe6-9b6c-6d79dd01d6fd",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
            }
        }, {
            "id": "dc8715ef-1b3f-45d5-85d5-f49a95250a33",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
            }
        }, {
            "id": "08ca5351-faff-4bf2-b795-48b44bcf18f7",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
            }
        }, {
            "id": "42fd3324-11f5-40e3-b258-360ecf6d38ba",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
            }
        }, {
            "id": "808eac51-bf7e-48fa-a285-fe3f3d3cbf31",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
            }
        }, {
            "id": "79bb250c-6ce9-466d-8dd4-5ed30afd905c",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
            }
        }]
    }, {
        "id": "9f5e3921-dacf-4d3a-b1dd-e15b2108b36f",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [{
            "id": "ad9cc5da-ebd5-4659-9171-31162bec62d0",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
            }
        }, {
            "id": "3ea8c5a6-b520-49ca-bc40-a51b0ecdb9a7",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
            }
        }, {
            "id": "512fac81-af8b-4a48-9f94-7e80b1b7b55b",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
        }]
    }, {
        "id": "a362c77d-6fe8-4888-9630-ac8d32319ba3",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [{
            "id": "bc20fafb-34a0-4d20-baa2-5278d5d198e3",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
            }
        }]
    }, {
        "id": "b6088376-a358-48c1-b503-2e1ac4c20fcb",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
        },
        "protocolMappers": [{
            "id": "4dd6226d-9959-4d3b-b562-96afb7ebc5c5",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
            }
        }, {
            "id": "0bc7e5d2-23d2-4785-be77-1c3bebae651b",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
            }
        }]
    }, {
        "id": "5b6dd662-b5f5-4193-b221-f98c29d7efa6",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
        },
        "protocolMappers": [{
            "id": "6ab8254e-180f-41f5-87ad-9aa40bbed046",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
            }
        }]
    }, {
        "id": "4874cc85-2b1f-44e6-b543-54a4112b3af1",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
        },
        "protocolMappers": [{
            "id": "ac443103-d220-4611-96d4-83f22f7327e9",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
            }
        }]
    }, {
        "id": "41133e30-d715-4422-8421-25fcb199bdbe",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [{
            "id": "fa14ab4f-e125-4bd9-8efd-1e63a678f68f",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
            }
        }, {
            "id": "954111dd-5a01-40fd-ae7f-a80973b933c5",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
            }
        }]
    }, {
        "id": "f41910bf-ea81-4544-95e0-134efaa959b2",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
        }
    }],
    "defaultDefaultClientScopes": ["role_list", "profile", "email", "roles", "web-origins", "acr"],
    "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [{
            "id": "a0d521b1-2cb8-41a0-a78b-4f6c6c89ce05",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
        }, {
            "id": "217828cc-0982-42f3-86d1-d113ddcadd8e",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
        }, {
            "id": "f10e7c52-a5f2-4b9e-a5ba-010cb44c8f20",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
                "max-clients": ["200"]
            }
        }, {
            "id": "242f24a0-7b87-4a59-b156-8568d765344f",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
                "allowed-protocol-mapper-types": ["saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper"]
            }
        }, {
            "id": "f8fc7eb5-eba8-44dc-85d9-442ad0a72aba",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
                "allow-default-scopes": ["true"]
            }
        }, {
            "id": "f4494fa5-bf6e-4abf-89c3-ddce77553986",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
                "allowed-protocol-mapper-types": ["saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper"]
            }
        }, {
            "id": "51547d32-2532-479b-8bbf-0dd1a4be65de",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
                "host-sending-registration-request-must-match": ["true"],
                "client-uris-must-match": ["true"]
            }
        }, {
            "id": "dd5335c7-cf44-4ce8-9b38-ae177170cd6c",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
                "allow-default-scopes": ["true"]
            }
        }],
        "org.keycloak.keys.KeyProvider": [{
            "id": "91c9cf58-3baa-41c4-9394-a46e95ed7718",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
                "privateKey": ["MIIEogIBAAKCAQEAvmH8VUPAoW904W1DaZuEKZRLbCUPWVz/3B35F5HR5AKi+SDwOQl4bu/qUHJbyUoA8nwCGp7nlLDoMaaplT9XmC583T63nb0GLVuoGVmWEtnWLOSb6E7+AoHNAYFgALWpdMBSrD4K2FriGHnX848t196xCJGpfv0FbYPwp3vY8cfdSaQeNnfaAm52uDgu8nXAU1e4twoU9m1NSSI3NsXxymle+CllYrGZxnd6g33+2r++RUsBIHp0tsLrc7pDCRD3r8dhr5DF0udAI1jUmHGCFuMRHuin46yO8G4DPm/Lt2O1LekgyGMqwKcnLjJSXZKAZxrlGrmXSjvcfEs3fCGmqQIDAQABAoIBABCcxvqPMgu8KKYjhUB9uR1yMtcd0D4vXOWhiWrmttqHJt6ngsKtWoCOp4LryanRru25x6q4PzOksKwlc3KCH5P4SX26Q2YsmHGEiBFnNW7RaoyKCbcujmBcYG2/UufY8i+NeSFNvB9HJee2GROIBLtrk4XQhQpfTHYTD2Cj8EkfjZWgnHGjU66y2qrvgLHU4tJ/yMujaZMAneW5A8z1MV4mPbMHPp3Dlip0FzFmVOwI79bo6YjkGoOLHshZVPwF02bhOjwX+pAAKKMEMfOTv7+0eQYsk0Hxs7Xmg1q1dg6tmeEo58tVUtSnMQ/U0Hs2WhimG6dbrHeyjylwQEhWFOECgYEA5op5UffL/g3c8m4L6+i5QbmOCYEesPPdTeXQ3Tze4Q8XWz6hWmONrFCBCMXdfzhvirtTFLPXE7uoI7Q4KwaIFJH/r/wT7K/k19mpU8mTO4TOG0caVXKm47cO0XgyPTKQ6bcor650sb/xL50VcNbqqu93h05LQRmyLMvtx3nXXmECgYEA02g3nVAzroRG4BvPYLVh4ZmtPqwe1BdTSzZDxQBxvz90HFKiOBB+sC4QBYIWSTF/ggD6kqNeoMs4q1tLWjhAUEwIyjw8/9DFGvmF09NdJnsm2dL3fjdXy915WUgZHdBuhC9JbYavbd+2L9YxOtr5Z/VdkudcIVw73evOlE3+3UkCgYBcheqWyPpnpays5xmFvkrLY+rrSZTFs7l3j+o5QDq63FGlXwdmvVmYdF605KQ2cLHjXbbEMkD5PHEIk0WPjvmCN+4D9QkSDq2rK0HXzKh4VJ5bODgLXw43ibo6uyB+ixK5mbaMe1l+FOh5EXQPa1GW9LBl7zgokmV9sQJm8jFLQQKBgEBWgj5tDx14gj1oGUe8S8qlw1TEeyle4+mK3TsSNIvYmtSXzWi0lGm3ywZyHagu2ThOZfPEpmLXFisIQLl3TxNg4Hfztzi/Z40bDUB3He09I4i9LLcLzrtrbqfeSk6JhWjTH0ym5bLRl5edXyQjSi36PX0cziwU7t9OCXOW/Q6JAoGAfId4MbvCD11s6yrCVMxd37Ix8jBldTm36c7VGWKc4NPG3s1eL2DpDSiP6MdWmcj/zB3vjqhuD4GrQeVspXSw3SLyLrVIIekT/bqiU4G2e1ee3CfsdKYM8H6MyRnt2ce50nSr5xRTnLGzEPKAYrnf3Qtga6Gs4rKgPDBFUd9gLMg="],
                "certificate": ["MIICmTCCAYECBgGDdLy42jANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVzdG9yZTAeFw0yMjA5MjUxMjU5MjhaFw0zMjA5MjUxMzAxMDhaMBAxDjAMBgNVBAMMBXN0b3JlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvmH8VUPAoW904W1DaZuEKZRLbCUPWVz/3B35F5HR5AKi+SDwOQl4bu/qUHJbyUoA8nwCGp7nlLDoMaaplT9XmC583T63nb0GLVuoGVmWEtnWLOSb6E7+AoHNAYFgALWpdMBSrD4K2FriGHnX848t196xCJGpfv0FbYPwp3vY8cfdSaQeNnfaAm52uDgu8nXAU1e4twoU9m1NSSI3NsXxymle+CllYrGZxnd6g33+2r++RUsBIHp0tsLrc7pDCRD3r8dhr5DF0udAI1jUmHGCFuMRHuin46yO8G4DPm/Lt2O1LekgyGMqwKcnLjJSXZKAZxrlGrmXSjvcfEs3fCGmqQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAWUftc9xXa+tXk+pLYGqHROMVKzbe/smnh1Nzkrr8tm6MToHlojr3a4bD6ePMsSlL4J1FkiWtqVMfwJs8a+dobZ251UB1QPbiHUUeMm+ncakawD2Z6hccKFidHQQMvzLPDbva7W6W50KWqSQMDz1wS/5gZbXw3+JYWwASxNC1hLnU5jNADAlibWkJ2sELrFx9fb53z9WXcN5bJrOsFPuuNpOoO0Kv+qQ3ocK3jFGAiW5VYNz8LD9VfBR79p3oI9vSfbFm5NxdrefS94FyI3PEWH0df/+7LAPc5lGezF6uzUqP40g2I9moewn4wFkM/z7Cl/vtz8b0sxVyFkRQizg3g"],
                "priority": ["100"]
            }
        }, {
            "id": "d57ded72-01e3-42f1-9626-3968f526fd61",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
                "privateKey": ["MIIEpAIBAAKCAQEAzOCdcS8ZOFbl2Ax4Mjybh5trKP2NCeDDEWbwnNx0BJ+CN3GnYbV5/pX1WsM64Zs2+R++Ch9YShxml2gGBJPzBq0lJ33C1PNZBpQtzGd9nx7appAqaKA5j0FjPlIcgURe5ZYRwP/vWpxZ+iyBFwWcVO6dDPSEb5Rlxg+GZ/iutLS3YdIZISoB4k7Qj3rBDv1uWKko70v6Of3DULNr7l8setXmC31tHg0BBsQhoSAmM7cN8gxE3oNOlqw1UkmXISw7Z1aoou3A7E8hZdyMQ8Udoy94K5mmdtpy2Gb7LI6E2YoKZH4XRcMAlNTCp4cjyj25OtNG54/xbt7AiZ96J4U9JQIDAQABAoIBACco1Z8RKApnPaZmd8DuabHpSHm8wOz+63oTiXEKCBjsHhkX3azk4Y0CP7PZ9hKyNrc2VH4d0KPVutw8s03Ds6N2i8/5DzjhzIXf48Makt3LqXJFwv1dhrL1hhEe47jnhxXt8bXIlYjlsqMJR6FNXryzIQydXgTvweYyCHguBcKfInlnBLJZ7llkj8PdWRORxsZmoRkOwsmEVcbvyg1E48sFd9zulgqurP6cK7dnMSoWRpPSsyaKCTZqnbGM2Y1xBmYCmVMPdlXr6N+ukgFlXBD3rPPGs+B4OGX7qIJB96MNnbOfzT5ltIm5oIcLc/jmuVyEYySCagwN8Atp3eGON3ECgYEA8GPzljyhE3nM3r7+QwIa1Y5GxPZkn/5MYQmt0LIqroBLU/v4UztmE+EtysVyzeycn/Qncdv5SXC2uQ+9fiLiRoHP/NRAF98JZ7VMU/rpu320+DO4KHBqj0UozbEJGw1//fiH8b2H2BXg4RPswDwb6cN8OA58vscxz4vaoZDVGSkCgYEA2i5THvXFRtTDMhbY8vhhRDruWeIJuEwpkONPXNIEbHyYTm1wDUfZmw6c8aI94b/inR3hvSXkCdwii8c4pHJ9gE38+OGJGe0MhvwERqG/wPdEKQ/zupiOq1bppDtEy27NTjZysL4iRIQZbaqdfBUKb4qtpRm5qeS1wf1u/E2lN50CgYAvMkCJ1598VmaNuQvslgY0tXlZhFKfQus2BhN1LPXKSu//LjJEDR5uesBl1jxDB9h8YxA3f4vDCnklflyi3jB0zVnLdtSamzSagvLYbiPjpruYG3dloSSaumZXdBGomQ7vCxONt7trBmifaC0MVQDZ9YJ28wk036D88aVcITZleQKBgQC0gjEY40OFF5ArB8YUNzTZ61u5l45tIO4exkGpzMQGMYsdD+PtyO0bIRrtu0oxVL0bOlbCU+/3zF30gS22uFZm6Z8LFiWFAp8jqquq+DWaY7jLtDv0vDUFQtHoo3SGTrSjKd73pUbaouQa3FaRCyNoJzcE6mS2T9ekmJXTPjYb7QKBgQCNtTFlOiGke6YTBQFMzu/mFCJromqsCL11y7mPcX20S7nffEfFtOzHfuJxziCskzCcsUfImW1A1ilcXSnF0/b77/IneSi0rw+PPSUQSw5SbRUD+QktI2MsPGB25Lu5FX8F4YYYei0vFPAJ4K7xVvHGNI9JF5Ya/GSvbqBhYQL//w=="],
                "certificate": ["MIICmTCCAYECBgGDdLy5wDANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVzdG9yZTAeFw0yMjA5MjUxMjU5MjhaFw0zMjA5MjUxMzAxMDhaMBAxDjAMBgNVBAMMBXN0b3JlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzOCdcS8ZOFbl2Ax4Mjybh5trKP2NCeDDEWbwnNx0BJ+CN3GnYbV5/pX1WsM64Zs2+R++Ch9YShxml2gGBJPzBq0lJ33C1PNZBpQtzGd9nx7appAqaKA5j0FjPlIcgURe5ZYRwP/vWpxZ+iyBFwWcVO6dDPSEb5Rlxg+GZ/iutLS3YdIZISoB4k7Qj3rBDv1uWKko70v6Of3DULNr7l8setXmC31tHg0BBsQhoSAmM7cN8gxE3oNOlqw1UkmXISw7Z1aoou3A7E8hZdyMQ8Udoy94K5mmdtpy2Gb7LI6E2YoKZH4XRcMAlNTCp4cjyj25OtNG54/xbt7AiZ96J4U9JQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQC06E4IkM8fw0Y6ptS4GzJ40QGd0RBeSxMAyD7lYpsAIyp39RTJm8nrYkOWAlFQ/x4+BBciTArSx2ywX1sb0wzjL/WuvZ0sB73uL/IsYKrKQkMFUcr4x2nHS5lqWeJEzqjd9tq2OjViAXy6b4hz+OyjfgsuZg7hHe3/0TtgxWDjXRyuSm3e/itxub3M6SMLaJZwGa1YTBRA26iUIi7N1j2s9iXqxk3kVkHaWxT/xT44aMSJKYbe5rKG8rTXMcmnDSLShJt2KrNlNe/24O4IVQ57/bS2CwDhB+nD6LMAkFCICNZnn3upJYUC5/oNmQlx1JqO7l//8OaFWN9oFKJZ6riy"],
                "priority": ["100"],
                "algorithm": ["RSA-OAEP"]
            }
        }, {
            "id": "886c4d7b-24c4-427d-80fe-5a7c55a9173e",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
                "kid": ["4095c20e-fcfc-4d70-9e2d-5e36c50bc83b"],
                "secret": ["FBMQgqUAHyQSwxTDkXTnIw"],
                "priority": ["100"]
            }
        }, {
            "id": "c0a2b2a8-5dcd-48af-ba6c-717cf24a3697",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
                "kid": ["c621b3e4-b3b0-4976-a430-cdc6b561d30b"],
                "secret": ["tMZf_QeFq6xEG9J4ka3neVXD5-3ExKGbJaCTb_poAxklzGPrqHDcru-s3L4IDb149WZWPFlB3qaSSq0pO8sSzg"],
                "priority": ["100"],
                "algorithm": ["HS256"]
            }
        }]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [{
        "id": "c5b99950-a3ad-40f6-aabd-a2066f279a8e",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
        }]
    }, {
        "id": "0135922c-6b28-44f6-966c-1ed441e6b7d7",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "9b17ee82-25f1-46dc-91ef-0e7aa344f948",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "56432fdd-e0d4-4d33-a160-c88bf5ead4c6",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "d0d76603-121e-4838-82e6-b0efde42d840",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "c16b1cef-ea97-4da9-887a-55f671e43c50",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
        }]
    }, {
        "id": "2816537a-d3f9-4083-a00e-88216c434b1e",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "dad7324a-cb83-4ef9-bb58-7cbeddf5d1a9",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
        }]
    }, {
        "id": "31f0977a-4d2a-487a-bcba-d58bfa609aa6",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
        }]
    }, {
        "id": "52449d3b-a06b-4b75-a724-900d417e3886",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
        }]
    }, {
        "id": "60f49709-50a7-4a49-8788-0de4b17a4e0f",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "d6a7b42a-b118-4b26-bb84-912c516bcdaa",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
        }]
    }, {
        "id": "1d48869a-a67d-4fc2-adfe-51e79a32243a",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "f5841241-a9f1-41fa-aea6-842e425cae31",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
        }]
    }, {
        "id": "fa88a930-facc-41f7-8b27-221baaa7e6de",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
        }]
    }, {
        "id": "346d07e9-ba78-4104-b708-5ef9f83254bc",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false
        }]
    }, {
        "id": "82ac674f-c0eb-49f4-a0df-908e2c4efe21",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
        }]
    }, {
        "id": "c8bcf90f-0ad7-4558-8fd7-980658b66dfd",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }, {
        "id": "cffda802-e696-4c90-8c94-1965b26b53f2",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }, {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
        }]
    }, {
        "id": "2588498d-2abc-4314-ba40-de54bdd34927",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [{
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
        }]
    }],
    "authenticatorConfig": [{
        "id": "45b89492-10ac-424b-a690-6a9945ce1190",
        "alias": "create unique user config",
        "config": {
            "require.password.update.after.registration": "false"
        }
    }, {
        "id": "7bd0cecd-9d99-4df6-99b7-0a14bc07ca2d",
        "alias": "review profile config",
        "config": {
            "update.profile.on.first.login": "missing"
        }
    }],
    "requiredActions": [{
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
    }, {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
    }, {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
    }, {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
    }, {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
    }, {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
    }, {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
    }, {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
    }, {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
    }],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5"
    },
    "keycloakVersion": "19.0.2",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    },
    "users": [{
        "id": "b9452418-a98e-410a-b602-95a3f33c6e7e",
        "createdTimestamp": 1664110895515,
        "username": "customer",
        "enabled": true,
        "totp": false,
        "emailVerified": true,
        "firstName": "customer",
        "lastName": "",
        "email": "herzog.thomas81@gmail.com",
        "credentials": [{
            "id": "693af56f-fe9e-403c-bc93-9425e42543f7",
            "type": "password",
            "userLabel": "My password",
            "createdDate": 1664110904355,
            "secretData": "{\"value\":\"ORFxUq8jig+tStgaaWrvU9RisGaJVPnjkmSYrjmLAJ4AfX/fv0a/HiUEH1rSL3isoEz0TwWDaszDzpBxHCNiUw==\",\"salt\":\"jLTGumdsBojz6ob5v9pyvQ==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": ["default-roles-store"],
        "notBefore": 0,
        "groups": ["/customer-group"]
    }]
}